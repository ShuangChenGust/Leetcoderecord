class Solution {
    public boolean isUgly(int num) {
        if(num == 0) {
            return false;
        }
        boolean flag = true;
        while(flag && num != 1) {
            flag = false;
            if(num % 2 == 0) {
                num = num >> 1;
                flag = true;
            }else if(num % 3 == 0) {
                num = num / 3;
                flag = true;
            }else if(num % 5 == 0 ) {
                num = num / 5;
                flag = true;
            }
        }
        return num == 1? true : false;
    }
}

作者：bobby996
链接：https://leetcode-cn.com/problems/ugly-number/solution/10000-9707-by-angel-20/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


DP:
/**
 * @param {number} n
 * @return {number}
 1 is the ugly number
 */
var nthUglyNumber = function(n) {
    const dp = Array(n+1).fill(Infinity);
    dp[1] = 1;
    for(let i = 1; i<= n; i++){
        for(let j = 1; j< i; j++){
            if(dp[j]*2 > dp[i-1]){
                dp[i] = Math.min(dp[j]*2, dp[i]);
            }
            if(dp[j] * 3 > dp[i-1]){
                dp[i] = Math.min(dp[j]*3, dp[i]);
            }
            if(dp[j] * 5 > dp[i-1]){
                dp[i] = Math.min(dp[j]*5, dp[i]);
            }
        }
    }
    // console.log(dp);
    return dp[n];
};